<local:ValidatedPage xmlns:local="clr-namespace:presentation" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes" TextElement.Foreground="{DynamicResource MaterialDesignBody}" TextElement.FontWeight="Medium" TextElement.FontSize="14" TextOptions.TextFormattingMode="Ideal" TextOptions.TextRenderingMode="Auto" Background="{DynamicResource MaterialDesignPaper}" FontFamily="{DynamicResource MaterialDesignFont}" x:Class="presentation.AdminViewOrdersPage" Title="View Orders">
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="300"/>
			<ColumnDefinition Width="*"/>
		</Grid.ColumnDefinitions>
		<md:Card Grid.Column="0">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="*"/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>
				<StackPanel Grid.Row="0">
					<ItemsControl Style="{StaticResource split_grid}">
						<TextBlock Grid.Column="0" Style="{StaticResource MaterialDesignHeadline5TextBlock}" Margin="20 15">Filters</TextBlock>
						<Button Click="Search" Style="{StaticResource MaterialDesignFloatingActionButton}" Grid.Column="2" Height="40" Width="40" Margin="0 0 20 0">
							<md:PackIcon Kind="Search"/>
						</Button>
					</ItemsControl>
					<Separator/>
				</StackPanel>
				<ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
					<StackPanel>
						<Grid Style="{StaticResource side_panel_row}">
							<ItemsControl Style="{StaticResource split_grid}">
								<TextBlock Grid.Column="0">ID</TextBlock>
								<ToggleButton Grid.Column="2" x:Name="id_filter_toggle"/>
							</ItemsControl>
						</Grid>
						<Border Style="{StaticResource side_panel_sub_row_border}" Visibility="{Binding IsChecked, ElementName=id_filter_toggle, Converter={StaticResource BooleanToVisibilityConverter}}">
							<StackPanel Style="{StaticResource side_panel_sub_row}">
								<ComboBox Style="{StaticResource MaterialDesignFloatingHintComboBox}" md:HintAssist.Hint="Filter type" x:Name="id_filter_type" ItemsSource="{Binding IDCondition.FilterTypes}"/>
								<TextBlock x:Name="id_filter_type_error" Style="{StaticResource error}"/>
								<StackPanel Visibility="{Binding Path=SelectedItem.ControlVisibility, ElementName=id_filter_type, TargetNullValue=Collapsed, FallbackValue=Collapsed}">
									<TextBox x:Name="id_filter_value" md:HintAssist.Hint="ID" Style="{StaticResource MaterialDesignFloatingHintTextBox}"/>
									<TextBlock x:Name="id_filter_value_error" Style="{StaticResource error}"/>
								</StackPanel>
							</StackPanel>
						</Border>
						<Separator/>
						<Grid Style="{StaticResource side_panel_row}">
							<ItemsControl Style="{StaticResource split_grid}">
								<TextBlock Grid.Column="0">Guest request ID</TextBlock>
								<ToggleButton Grid.Column="2" x:Name="guest_request_id_filter_toggle"/>
							</ItemsControl>
						</Grid>
						<Border Style="{StaticResource side_panel_sub_row_border}" Visibility="{Binding IsChecked, ElementName=guest_request_id_filter_toggle, Converter={StaticResource BooleanToVisibilityConverter}}">
							<StackPanel Style="{StaticResource side_panel_sub_row}">
								<ComboBox Style="{StaticResource MaterialDesignFloatingHintComboBox}" md:HintAssist.Hint="Filter type" x:Name="guest_request_id_filter_type" ItemsSource="{Binding GuestRequestIDCondition.FilterTypes}"/>
								<TextBlock x:Name="guest_request_id_filter_type_error" Style="{StaticResource error}"/>
								<StackPanel Visibility="{Binding Path=SelectedItem.ControlVisibility, ElementName=guest_request_id_filter_type, TargetNullValue=Collapsed, FallbackValue=Collapsed}">
									<TextBox x:Name="guest_request_id_filter_value" md:HintAssist.Hint="ID" Style="{StaticResource MaterialDesignFloatingHintTextBox}"/>
									<TextBlock x:Name="guest_request_id_filter_value_error" Style="{StaticResource error}"/>
								</StackPanel>
							</StackPanel>
						</Border>
						<Separator/>
						<Grid Style="{StaticResource side_panel_row}">
							<ItemsControl Style="{StaticResource split_grid}">
								<TextBlock Grid.Column="0">Hosting unit ID</TextBlock>
								<ToggleButton Grid.Column="2" x:Name="unit_id_filter_toggle"/>
							</ItemsControl>
						</Grid>
						<Border Style="{StaticResource side_panel_sub_row_border}" Visibility="{Binding IsChecked, ElementName=unit_id_filter_toggle, Converter={StaticResource BooleanToVisibilityConverter}}">
							<StackPanel Style="{StaticResource side_panel_sub_row}">
								<ComboBox Style="{StaticResource MaterialDesignFloatingHintComboBox}" md:HintAssist.Hint="Filter type" x:Name="unit_id_filter_type" ItemsSource="{Binding UnitIDCondition.FilterTypes}"/>
								<TextBlock x:Name="unit_id_filter_type_error" Style="{StaticResource error}"/>
								<StackPanel Visibility="{Binding Path=SelectedItem.ControlVisibility, ElementName=unit_id_filter_type, TargetNullValue=Collapsed, FallbackValue=Collapsed}">
									<TextBox x:Name="unit_id_filter_value" md:HintAssist.Hint="ID" Style="{StaticResource MaterialDesignFloatingHintTextBox}"/>
									<TextBlock x:Name="unit_id_filter_value_error" Style="{StaticResource error}"/>
								</StackPanel>
							</StackPanel>
						</Border>
						<Separator/>
						<Grid Style="{StaticResource side_panel_row}">
							<ItemsControl Style="{StaticResource split_grid}">
								<TextBlock Grid.Column="0">Guest email</TextBlock>
								<ToggleButton Grid.Column="2" x:Name="guest_email_filter_toggle"/>
							</ItemsControl>
						</Grid>
						<Border Style="{StaticResource side_panel_sub_row_border}" Visibility="{Binding IsChecked, ElementName=guest_email_filter_toggle, Converter={StaticResource BooleanToVisibilityConverter}}">
							<StackPanel Style="{StaticResource side_panel_sub_row}">
								<ComboBox Style="{StaticResource MaterialDesignFloatingHintComboBox}" md:HintAssist.Hint="Filter type" x:Name="guest_email_filter_type" ItemsSource="{Binding GuestEmailCondition.FilterTypes}"/>
								<TextBlock x:Name="guest_email_filter_type_error" Style="{StaticResource error}"/>
								<StackPanel Visibility="{Binding Path=SelectedItem.ControlVisibility, ElementName=guest_email_filter_type, TargetNullValue=Collapsed, FallbackValue=Collapsed}">
									<TextBox x:Name="guest_email_filter_value" md:HintAssist.Hint="ID" Style="{StaticResource MaterialDesignFloatingHintTextBox}"/>
									<TextBlock x:Name="guest_email_filter_value_error" Style="{StaticResource error}"/>
								</StackPanel>
							</StackPanel>
						</Border>
						<Separator/>
						<Grid Style="{StaticResource side_panel_row}">
							<ItemsControl Style="{StaticResource split_grid}">
								<TextBlock Grid.Column="0">Host email</TextBlock>
								<ToggleButton Grid.Column="2" x:Name="host_email_filter_toggle"/>
							</ItemsControl>
						</Grid>
						<Border Style="{StaticResource side_panel_sub_row_border}" Visibility="{Binding IsChecked, ElementName=host_email_filter_toggle, Converter={StaticResource BooleanToVisibilityConverter}}">
							<StackPanel Style="{StaticResource side_panel_sub_row}">
								<ComboBox Style="{StaticResource MaterialDesignFloatingHintComboBox}" md:HintAssist.Hint="Filter type" x:Name="host_email_filter_type" ItemsSource="{Binding HostEmailCondition.FilterTypes}"/>
								<TextBlock x:Name="host_email_filter_type_error" Style="{StaticResource error}"/>
								<StackPanel Visibility="{Binding Path=SelectedItem.ControlVisibility, ElementName=host_email_filter_type, TargetNullValue=Collapsed, FallbackValue=Collapsed}">
									<TextBox x:Name="host_email_filter_value" md:HintAssist.Hint="ID" Style="{StaticResource MaterialDesignFloatingHintTextBox}"/>
									<TextBlock x:Name="host_email_filter_value_error" Style="{StaticResource error}"/>
								</StackPanel>
							</StackPanel>
						</Border>
						<Separator/>
						<Grid Style="{StaticResource side_panel_row}">
							<ItemsControl Style="{StaticResource split_grid}">
								<TextBlock Grid.Column="0">Start date</TextBlock>
								<ToggleButton Grid.Column="2" x:Name="start_date_filter_toggle"/>
							</ItemsControl>
						</Grid>
						<Border Style="{StaticResource side_panel_sub_row_border}" Visibility="{Binding IsChecked, ElementName=start_date_filter_toggle, Converter={StaticResource BooleanToVisibilityConverter}}">
							<StackPanel Style="{StaticResource side_panel_sub_row}">
								<ComboBox Style="{StaticResource MaterialDesignFloatingHintComboBox}" md:HintAssist.Hint="Filter type" x:Name="start_date_filter_type" ItemsSource="{Binding StartDateCondition.FilterTypes}"/>
								<TextBlock x:Name="start_date_filter_type_error" Style="{StaticResource error}"/>
								<StackPanel Visibility="{Binding Path=SelectedItem.Control1Visibility, ElementName=start_date_filter_type, TargetNullValue=Collapsed, FallbackValue=Collapsed}">
									<DatePicker x:Name="start_date_filter_value_1" md:HintAssist.Hint="Date" Style="{StaticResource MaterialDesignFloatingHintDatePicker}"/>
									<TextBlock x:Name="start_date_filter_value_1_error" Style="{StaticResource error}"/>
								</StackPanel>
								<StackPanel Visibility="{Binding Path=SelectedItem.Control2Visibility, ElementName=start_date_filter_type, TargetNullValue=Collapsed, FallbackValue=Collapsed}">
									<DatePicker x:Name="start_date_filter_value_2" md:HintAssist.Hint="Date" Style="{StaticResource MaterialDesignFloatingHintDatePicker}"/>
									<TextBlock x:Name="start_date_filter_value_2_error" Style="{StaticResource error}"/>
								</StackPanel>
							</StackPanel>
						</Border>
						<Separator/>
						<Grid Style="{StaticResource side_panel_row}">
							<ItemsControl Style="{StaticResource split_grid}">
								<TextBlock Grid.Column="0">End date</TextBlock>
								<ToggleButton Grid.Column="2" x:Name="end_date_filter_toggle"/>
							</ItemsControl>
						</Grid>
						<Border Style="{StaticResource side_panel_sub_row_border}" Visibility="{Binding IsChecked, ElementName=end_date_filter_toggle, Converter={StaticResource BooleanToVisibilityConverter}}">
							<StackPanel Style="{StaticResource side_panel_sub_row}">
								<ComboBox Style="{StaticResource MaterialDesignFloatingHintComboBox}" md:HintAssist.Hint="Filter type" x:Name="end_date_filter_type" ItemsSource="{Binding EndDateCondition.FilterTypes}"/>
								<TextBlock x:Name="end_date_filter_type_error" Style="{StaticResource error}"/>
								<StackPanel Visibility="{Binding Path=SelectedItem.Control1Visibility, ElementName=end_date_filter_type, TargetNullValue=Collapsed, FallbackValue=Collapsed}">
									<DatePicker x:Name="end_date_filter_value_1" md:HintAssist.Hint="Date" Style="{StaticResource MaterialDesignFloatingHintDatePicker}"/>
									<TextBlock x:Name="end_date_filter_value_1_error" Style="{StaticResource error}"/>
								</StackPanel>
								<StackPanel Visibility="{Binding Path=SelectedItem.Control2Visibility, ElementName=end_date_filter_type, TargetNullValue=Collapsed, FallbackValue=Collapsed}">
									<DatePicker x:Name="end_date_filter_value_2" md:HintAssist.Hint="Date" Style="{StaticResource MaterialDesignFloatingHintDatePicker}"/>
									<TextBlock x:Name="end_date_filter_value_2_error" Style="{StaticResource error}"/>
								</StackPanel>
							</StackPanel>
						</Border>
						<Separator/>
						<Grid Style="{StaticResource side_panel_row}">
							<ItemsControl Style="{StaticResource split_grid}">
								<TextBlock Grid.Column="0">Number of adults</TextBlock>
								<ToggleButton Grid.Column="2" x:Name="adults_filter_toggle"/>
							</ItemsControl>
						</Grid>
						<Border Style="{StaticResource side_panel_sub_row_border}" Visibility="{Binding IsChecked, ElementName=adults_filter_toggle, Converter={StaticResource BooleanToVisibilityConverter}}">
							<StackPanel Style="{StaticResource side_panel_sub_row}">
								<ComboBox Style="{StaticResource MaterialDesignFloatingHintComboBox}" md:HintAssist.Hint="Filter type" x:Name="adults_filter_type" ItemsSource="{Binding AdultsCondition.FilterTypes}"/>
								<TextBlock x:Name="adults_filter_type_error" Style="{StaticResource error}"/>
								<StackPanel Visibility="{Binding Path=SelectedItem.Control1Visibility, ElementName=adults_filter_type, TargetNullValue=Collapsed, FallbackValue=Collapsed}">
									<TextBox x:Name="adults_filter_value_1" md:HintAssist.Hint="Number" Style="{StaticResource MaterialDesignFloatingHintTextBox}"/>
									<TextBlock x:Name="adults_filter_value_1_error" Style="{StaticResource error}"/>
								</StackPanel>
								<StackPanel Visibility="{Binding Path=SelectedItem.Control2Visibility, ElementName=adults_filter_type, TargetNullValue=Collapsed, FallbackValue=Collapsed}">
									<TextBox x:Name="adults_filter_value_2" md:HintAssist.Hint="Number" Style="{StaticResource MaterialDesignFloatingHintTextBox}"/>
									<TextBlock x:Name="adults_filter_value_2_error" Style="{StaticResource error}"/>
								</StackPanel>
							</StackPanel>
						</Border>
						<Separator/>
						<Grid Style="{StaticResource side_panel_row}">
							<ItemsControl Style="{StaticResource split_grid}">
								<TextBlock Grid.Column="0">Number of children</TextBlock>
								<ToggleButton Grid.Column="2" x:Name="children_filter_toggle"/>
							</ItemsControl>
						</Grid>
						<Border Style="{StaticResource side_panel_sub_row_border}" Visibility="{Binding IsChecked, ElementName=children_filter_toggle, Converter={StaticResource BooleanToVisibilityConverter}}">
							<StackPanel Style="{StaticResource side_panel_sub_row}">
								<ComboBox Style="{StaticResource MaterialDesignFloatingHintComboBox}" md:HintAssist.Hint="Filter type" x:Name="children_filter_type" ItemsSource="{Binding ChildrenCondition.FilterTypes}"/>
								<TextBlock x:Name="children_filter_type_error" Style="{StaticResource error}"/>
								<StackPanel Visibility="{Binding Path=SelectedItem.Control1Visibility, ElementName=children_filter_type, TargetNullValue=Collapsed, FallbackValue=Collapsed}">
									<TextBox x:Name="children_filter_value_1" md:HintAssist.Hint="Number" Style="{StaticResource MaterialDesignFloatingHintTextBox}"/>
									<TextBlock x:Name="children_filter_value_1_error" Style="{StaticResource error}"/>
								</StackPanel>
								<StackPanel Visibility="{Binding Path=SelectedItem.Control2Visibility, ElementName=children_filter_type, TargetNullValue=Collapsed, FallbackValue=Collapsed}">
									<TextBox x:Name="children_filter_value_2" md:HintAssist.Hint="Number" Style="{StaticResource MaterialDesignFloatingHintTextBox}"/>
									<TextBlock x:Name="children_filter_value_2_error" Style="{StaticResource error}"/>
								</StackPanel>
							</StackPanel>
						</Border>
						<Separator/>
						<Grid Style="{StaticResource side_panel_row}">
							<ItemsControl Style="{StaticResource split_grid}">
								<TextBlock Grid.Column="0">City</TextBlock>
								<ToggleButton Grid.Column="2" x:Name="cities_filter_toggle"/>
							</ItemsControl>
						</Grid>
						<Border Style="{StaticResource side_panel_sub_row_border}" Visibility="{Binding IsChecked, ElementName=cities_filter_toggle, Converter={StaticResource BooleanToVisibilityConverter}}">
							<StackPanel Style="{StaticResource side_panel_sub_row}">
								<ComboBox x:Name="cities_filter_type" Style="{StaticResource MaterialDesignFloatingHintComboBox}" md:HintAssist.Hint="Filter type" ItemsSource="{Binding CitiesCondition.FilterTypes}"/>
								<TextBlock x:Name="cities_filter_type_error" Style="{StaticResource error}"/>
								<StackPanel Visibility="{Binding Path=SelectedItem.CheckBoxListVisibility, ElementName=cities_filter_type, TargetNullValue=Collapsed, FallbackValue=Collapsed}">
									<TextBlock x:Name="cities_filter_checkboxes_error" Style="{StaticResource error}"/>
									<ItemsControl x:Name="cities_filter_checkboxes" ItemsSource="{Binding Cities}">
										<ItemsControl.ItemTemplate>
											<DataTemplate>
												<CheckBox IsChecked="{Binding Selected, Mode=TwoWay}" Content="{Binding Object.Name}"/>
											</DataTemplate>
										</ItemsControl.ItemTemplate>
									</ItemsControl>
								</StackPanel>
							</StackPanel>
						</Border>
						<Separator/>
						<Grid Style="{StaticResource side_panel_row}">
							<ItemsControl Style="{StaticResource split_grid}">
								<TextBlock Grid.Column="0">Unit type</TextBlock>
								<ToggleButton Grid.Column="2" x:Name="unit_types_filter_toggle"/>
							</ItemsControl>
						</Grid>
						<Border Style="{StaticResource side_panel_sub_row_border}" Visibility="{Binding IsChecked, ElementName=unit_types_filter_toggle, Converter={StaticResource BooleanToVisibilityConverter}}">
							<StackPanel Style="{StaticResource side_panel_sub_row}">
								<ComboBox x:Name="unit_types_filter_type" Style="{StaticResource MaterialDesignFloatingHintComboBox}" md:HintAssist.Hint="Filter type" ItemsSource="{Binding UnitTypesCondition.FilterTypes}"/>
								<TextBlock x:Name="unit_types_filter_type_error" Style="{StaticResource error}"/>
								<StackPanel Visibility="{Binding Path=SelectedItem.CheckBoxListVisibility, ElementName=unit_types_filter_type, TargetNullValue=Collapsed, FallbackValue=Collapsed}">
									<TextBlock x:Name="unit_types_filter_checkboxes_error" Style="{StaticResource error}"/>
									<ItemsControl x:Name="unit_types_filter_checkboxes" ItemsSource="{Binding UnitTypes}">
										<ItemsControl.ItemTemplate>
											<DataTemplate>
												<CheckBox IsChecked="{Binding Selected, Mode=TwoWay}" Content="{Binding Object.Name}"/>
											</DataTemplate>
										</ItemsControl.ItemTemplate>
									</ItemsControl>
								</StackPanel>
							</StackPanel>
						</Border>
						<Separator/>
					</StackPanel>
				</ScrollViewer>
				<Button Grid.Row="2" Margin="10" Click="Search">
					<StackPanel Orientation="Horizontal">
						<md:PackIcon Kind="Search"/>
						<TextBlock Margin="5 0 5 0">SEARCH</TextBlock>
					</StackPanel>
				</Button>
			</Grid>
		</md:Card>
		<ScrollViewer VerticalScrollBarVisibility="Auto" Grid.Column="1">
			<StackPanel Style="{StaticResource stack_of_cards}">
				<md:Card Style="{StaticResource padded_stack_card}">
					<StackPanel>
						<ItemsControl Style="{StaticResource split_grid}">
							<TextBlock Grid.Column="0" Style="{StaticResource MaterialDesignHeadline4TextBlock}">Filtered Orders</TextBlock>
							<Button Grid.Column="2" Click="Back">
								<StackPanel Orientation="Horizontal">
									<md:PackIcon Kind="ArrowBack"/>
									<TextBlock Margin="5 0 5 0">BACK</TextBlock>
								</StackPanel>
							</Button>
						</ItemsControl>
						<Separator Height="30"/>
						<Grid Visibility="Hidden"><!-- Hack to make a column take up the rest of the available space -->
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="20"/>
							</Grid.ColumnDefinitions>
							<Rectangle Grid.Column="0" Width="{Binding ActualWidth, ElementName=id_column}"/>
							<Rectangle Grid.Column="1" Width="{Binding ActualWidth, ElementName=unit_column}"/>
							<Rectangle Grid.Column="2" Width="{Binding ActualWidth, ElementName=host_column}"/>
							<Rectangle Grid.Column="3" Width="{Binding ActualWidth, ElementName=guest_request_column}"/>
							<Rectangle Grid.Column="4" Width="{Binding ActualWidth, ElementName=guest_column}"/>
							<Rectangle Grid.Column="5" Width="{Binding ActualWidth, ElementName=status_column}"/>
							<Rectangle Grid.Column="6" x:Name="wide_column"/>
							<Rectangle Grid.Column="7" Width="{Binding ActualWidth, ElementName=view_column}"/>
						</Grid>
						<ListView x:Name="filtered_orders">
							<ListView.View>
								<GridView AllowsColumnReorder="false">
									<GridViewColumn x:Name="id_column" DisplayMemberBinding="{Binding ID}" Header="ID"/>
									<GridViewColumn x:Name="unit_column" DisplayMemberBinding="{Binding Unit}" Header="UNIT"/>
									<GridViewColumn x:Name="host_column" DisplayMemberBinding="{Binding Unit.Host}" Header="HOST"/>
									<GridViewColumn x:Name="guest_request_column" DisplayMemberBinding="{Binding GuestRequest}" Header="GUEST REQUEST"/>
									<GridViewColumn x:Name="guest_column" DisplayMemberBinding="{Binding GuestRequest.Guest}" Header="GUEST"/>
									<GridViewColumn x:Name="status_column" DisplayMemberBinding="{Binding OrderStatus}" Header="STATUS"/>
									<GridViewColumn DisplayMemberBinding="{Binding CreationDate}" Header="CREATION DATE" Width="{Binding ActualWidth, ElementName=wide_column}"/>
									<GridViewColumn x:Name="view_column">
										<GridViewColumn.CellTemplate>
											<DataTemplate>
												<Button Style="{StaticResource MaterialDesignToolButton}" Click="ViewOrder" CommandParameter="{Binding}" Height="14" Padding="0">
													<md:PackIcon Kind="Eye"/>
												</Button>
											</DataTemplate>
										</GridViewColumn.CellTemplate>
									</GridViewColumn>
								</GridView>
							</ListView.View>
						</ListView>
					</StackPanel>
				</md:Card>
			</StackPanel>
		</ScrollViewer>
	</Grid>
</local:ValidatedPage>